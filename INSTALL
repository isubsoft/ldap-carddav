-- Wiki
Link - https://github.com/isubsoft/ldap-carddav/wiki

-- Requirements
Check the wiki.

-- System dependencies (GNU/Linux Debian 11 used as a reference for a minimal test setup)
[core packages]
php-cli
php-common
php-curl
php-igbinary
php-json
php-ldap
php-mbstring
php-msgpack
php-opcache
php-readline
php-xml
composer

[packages if using sqlite as pdo database]
php-sqlite3
sqlite3

[packages if using mysql as pdo database]
php-mysql

[packages if using postgresql as pdo database]
php-pgsql

[packages if using memcached as cache backend]
php-memcached

[packages if using apcu as cache backend]
php-apcu

[packages if using apache as web server]
apache2
libapache2-mod-php

-- Download application
Download the application files from the repository in an empty folder (henceforth called the application folder) and place the application folder in a path suitable to your HTTP server. The application folder path should be set as the document root in your HTTP server configuration file.

-- Go to the application folder path before performing any of the below steps.

-- Composer
This application uses composer dependencies. Please install the dependencies by running 'composer update'. This application is compatible with SabreDAV 3.2 (PHP 5.5) till SabreDAV 4.0.3 (PHP 7.0.0). VObject 4.5 (PHP 7.1) is required for some vCard v3.0 interoperability with vCard v4.0 for contact groups. You may adjust composer.json according to your need/environment.

-- Application conf file
Copy conf/conf.php.example as conf/conf.php and update the file conf/conf.php according to your environment and need. Configuration keys are documented along side in the conf/conf.php.example file. Check the wiki for more advanced configuration examples.

-- Sync database creation
1. Create database objects as per sql/<database_product>/ddl.sql file.
   Example (sqlite): sqlite3 data/sync/syncdb/sqlite/cards.db < sql/sqlite/ddl.sql
2. The database user to be used by this application should have SELECT, INSERT, UPDATE and DELETE privileges on all tables created in the above step.
3. Update 'dsn' and credentials appropriately in $config['sync_database'] in conf/conf.php file.
4. If creating a sqlite database make sure the database file is placed inside the data directory.

-- Initializing sync database
1. Make sure your address books are configured correctly in the conf file before you perform the next steps.
2. Execute 'php src/App/syncdb.php init' to initialize the sync database.

-- File permissions
1. Make sure no application files or folders are initially owned by user www-data.
2. conf/conf.php MUST NOT be world readable but MUST be readable and preferably not writable by the user executing PHP.
   Equivalent of UNIX command: chmod o-rwx conf/conf.php && chmod g-w conf/conf.php && chgrp www-data conf/conf.php
3. Data directory need to be writable by the user executing PHP and MUST NOT be world readable. All sub directories of data directory need to be writable by the user executing PHP. Default data directory is data.
   Equivalent of UNIX command: chmod o-rwx data && chown -R www-data:www-data data
4. Cache directory need to be writable by the user executing PHP and MUST NOT be world readable. All sub directories of cache directory need to be writable by the user executing PHP. Default cache directory is cache.
   Equivalent of UNIX command: chmod o-rwx cache && chown -R www-data:www-data cache
5. Temporary files directory need to be writable by the user executing PHP unless system temporary files directory is configured. Default temporary files directory is tmp.
   Equivalent of UNIX command: chmod o-rwx tmp && chown -R www-data:www-data tmp

-- Web server and PHP configuration
Check the wiki for examples.

-- LDAP server
1. Operational attributes entryUUID, modifyTimestamp and createTimestamp need to be indexed for all contacts.
2. Bind user used for reading/writing contacts in an address book as per conf file need to have read privileges on entryUUID, modifyTimestamp and createTimestamp operational attributes additionally and must have appropriate size limit and time limit. It is recommended to create a separate user for syncing contacts having only read privileges on entryUUID, modifyTimestamp and createTimestamp of the contacts and liberal or no size limit and time limit. This sync user can be mentioned in 'sync_bind_user' and 'sync_bind_pw' of the address book configuration section in the conf file.
